(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{231:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"变量、常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量、常量"}},[t._v("#")]),t._v(" 变量、常量")]),t._v(" "),s("h2",{attrs:{id:"dart-变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dart-变量"}},[t._v("#")]),t._v(" Dart 变量")]),t._v(" "),s("p",[t._v("Dart是个强大的脚本语言，可以不预先定义变量类型，可以自动推到数据类型。")]),t._v(" "),s("p",[t._v("Dart中定义变量可以通过"),s("code",[t._v("var")]),t._v("关键字，也可以通过类型申明变量。")]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This is var.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nString str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This is string.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nint num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("注意：dart中有类型校验。")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("var")]),t._v("和数据类型不要一起写。")]),t._v(" "),s("li",[t._v("使用数据类型定义变量赋值必须符合该数据类型。")]),t._v(" "),s("li",[t._v("使用"),s("code",[t._v("var")]),t._v("定义的变量，一旦程序推导出数据类型，之后赋值必须符合该数据类型。")])])]),t._v(" "),s("h2",{attrs:{id:"dart-常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dart-常量"}},[t._v("#")]),t._v(" Dart 常量")]),t._v(" "),s("p",[t._v("Dart中常量使用"),s("code",[t._v("const")]),t._v("修饰,常量不可被重新赋值。")]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" PI "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1415926")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" double e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.71828")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// PI = 123; //报错")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Variables must be declared using the keywords 'const', 'final', 'var' or a type name.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Try adding the name of the type of the variable or the keyword 'var'.dart(missing_const_final_var_or_type)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The name 'PI' is already defined.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Try renaming one of the declarations.")]),t._v("\n")])])]),s("p",[t._v("除了"),s("code",[t._v("const")]),t._v("还可使用"),s("code",[t._v("final")]),t._v("修饰常量：")]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" PI "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1415926")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DateTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2020-05-20 23:34:02.932543")]),t._v("\n")])])]),s("p",[s("code",[t._v("const")]),t._v("与"),s("code",[t._v("final")]),t._v("区别：")]),t._v(" "),s("p",[s("code",[t._v("final")]),t._v("可以不用一开始就赋值，使用时再赋值只能赋值一次；"),s("code",[t._v("final")]),t._v("不仅有"),s("code",[t._v("const")]),t._v("编译时常量的特性，最重要的它是运行时常量，并且"),s("code",[t._v("final")]),t._v("是惰性初始化，即在运行时第一次使用才初始化赋值。")])])}),[],!1,null,null,null);a.default=e.exports}}]);