(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{270:function(t,v,_){"use strict";_.r(v);var e=_(0),a=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"dart-运算符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dart-运算符"}},[t._v("#")]),t._v(" dart 运算符")]),t._v(" "),_("p",[t._v("dart定义的运算符如下所示，前排的优先级高于后排的，例如"),_("code",[t._v("%")]),t._v("、 "),_("code",[t._v(">")]),t._v(" 、"),_("code",[t._v("==")]),t._v("、 "),_("code",[t._v(">")]),t._v("、"),_("code",[t._v("&&")]),t._v("，但括号能改变优先级")]),t._v(" "),_("p",[t._v("|---|---|\n|描述|\t运算符|\n|一元后缀|\t"),_("code",[t._v("expr++")]),t._v(" 、 "),_("code",[t._v("expr–")]),t._v(" 、 "),_("code",[t._v("()")]),t._v(" 、 "),_("code",[t._v("[]")]),t._v(" 、 "),_("code",[t._v(".")]),t._v("|\n|一元前缀|\t"),_("code",[t._v("-expr")]),t._v(" 、 "),_("code",[t._v("!expr")]),t._v(" 、 "),_("code",[t._v("~expr")]),t._v(" 、 "),_("code",[t._v("++expr")]),t._v(" 、 "),_("code",[t._v("–expr")]),t._v("|\n|乘除法|\t"),_("code",[t._v("*")]),t._v(" 、 "),_("code",[t._v("/")]),t._v(" 、"),_("code",[t._v("%")]),t._v(" 、 "),_("code",[t._v("~/")]),t._v("|\n|加减法\t|"),_("code",[t._v("+")]),t._v(" 、"),_("code",[t._v("-")]),t._v("|\n|移位\t|"),_("code",[t._v("<<")]),t._v(" 、 "),_("code",[t._v(">>")]),t._v("|\n|按位与\t|"),_("code",[t._v("&")]),t._v("|\n|按位或\t|"),_("code",[t._v("|")]),t._v("|\n|关系和类型判断|\t"),_("code",[t._v(">=")]),t._v(" 、 "),_("code",[t._v(">")]),t._v(" 、 "),_("code",[t._v("<=")]),t._v(" 、 "),_("code",[t._v("<")]),t._v(" 、 "),_("code",[t._v("as")]),t._v(" 、 "),_("code",[t._v("is")]),t._v(" 、 "),_("code",[t._v("is!")]),t._v("|\n|相等\t|"),_("code",[t._v("==")]),t._v(" 、 "),_("code",[t._v("!=")]),t._v("|\n|逻辑与\t|"),_("code",[t._v("&&")]),t._v("|\n|逻辑或\t|"),_("code",[t._v("||")]),t._v("|\n|条件式\t|"),_("code",[t._v("expr1 ? expr2 : expr3")]),t._v("|\n|级联\t|"),_("code",[t._v("..")]),t._v("|\n|赋值\t|"),_("code",[t._v("=")]),t._v(" 、"),_("code",[t._v("/=")]),t._v(" 、 "),_("code",[t._v("~/=")]),t._v(" 、 "),_("code",[t._v("%=")]),t._v(" 、 "),_("code",[t._v("+=")]),t._v(" 、 "),_("code",[t._v("-=")]),t._v(" 、 "),_("code",[t._v("<<=")]),t._v(" 、 "),_("code",[t._v(">>=")]),t._v(" 、 "),_("code",[t._v("&=")]),t._v(" 、 "),_("code",[t._v("^=")]),t._v("|")]),t._v(" "),_("h2",{attrs:{id:"算术运算符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[t._v("#")]),t._v(" 算术运算符")]),t._v(" "),_("p",[t._v("|---|---|\n|运算符|\t意义|\n|"),_("code",[t._v("+")]),t._v("\t|加法|\n|"),_("code",[t._v("-")]),t._v("\t|减法|\n|"),_("code",[t._v("-expr")]),t._v("|\t取反，或称否定（反向表达式）|\n|"),_("code",[t._v("*")]),t._v("\t|乘法|\n|"),_("code",[t._v("/")]),t._v("\t|除法|\n|"),_("code",[t._v("~/")]),t._v("\t|整除|\n|"),_("code",[t._v("%")]),t._v("\t|模运算，取整除后的余|\n|"),_("code",[t._v("++var")]),t._v("|\tvar = var + 1（执行前加1）|\n|"),_("code",[t._v("var++")]),t._v("|\tvar = var + 1（执行后加1）|\n|"),_("code",[t._v("–var")]),t._v("\t|var = var - 1（执行前减1）|\n|"),_("code",[t._v("var–")]),t._v("\t|var = var - 1（执行后减1）|")]),t._v(" "),_("h2",{attrs:{id:"相等与关系运算符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#相等与关系运算符"}},[t._v("#")]),t._v(" 相等与关系运算符")]),t._v(" "),_("p",[t._v("|---|---|\n|运算符|意义|\n|"),_("code",[t._v("==")]),t._v("\t|等于|\n|"),_("code",[t._v("!=")]),t._v("\t|不等于|\n|"),_("code",[t._v(">")]),t._v("\t|大于|\n|"),_("code",[t._v("<")]),t._v("\t|小于|\n|"),_("code",[t._v(">=")]),t._v("\t|大于等于|\n|"),_("code",[t._v("<=")]),t._v("\t|小于等于|")]),t._v(" "),_("h2",{attrs:{id:"类型运算符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#类型运算符"}},[t._v("#")]),t._v(" 类型运算符")]),t._v(" "),_("p",[t._v("用 "),_("code",[t._v("as")]),t._v("、"),_("code",[t._v("is")]),t._v("和"),_("code",[t._v("is!")]),t._v("可以很方便的在执行时检查类型\n用 "),_("code",[t._v("obj is T")]),t._v(" 这个语法可以判断obj是否实现了T")]),t._v(" "),_("div",{staticClass:"language-dart extra-class"},[_("pre",{pre:!0,attrs:{class:"language-dart"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("emp "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" Person"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    emp"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstName "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bob'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),_("p",[t._v("也可以使用"),_("code",[t._v("as")]),t._v("运算符检查")]),t._v(" "),_("div",{staticClass:"language-dart extra-class"},[_("pre",{pre:!0,attrs:{class:"language-dart"}},[_("code",[_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("emp "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("as")]),t._v(" Person"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstName "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bob'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),_("h2",{attrs:{id:"赋值运算符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[t._v("#")]),t._v(" 赋值运算符")]),t._v(" "),_("p",[t._v("赋值用 "),_("code",[t._v("=")]),t._v(" 运算符，如果在前面加上其他运算符比如 "),_("code",[t._v("+=")]),t._v(" ，就可以组成复合赋值运算符")]),t._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("=    –=    /=    %=    >>=    ^=\n+=    *=    ~/=    <<=    &=    |=\n")])])]),_("p",[t._v("复合赋值运算符的语法说明是 "),_("code",[t._v("a op= b")]),t._v(" 等于 "),_("code",[t._v("a = a op b")])]),t._v(" "),_("div",{staticClass:"language-dart extra-class"},[_("pre",{pre:!0,attrs:{class:"language-dart"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),_("h2",{attrs:{id:"逻辑运算符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),_("p",[t._v("|---|---|\n|运算符|\t意义|\n|"),_("code",[t._v("!expr")]),t._v("\t|反转表达式，假为真，反之亦然|\n|"),_("code",[t._v("||")]),t._v("|\t逻辑或|\n|"),_("code",[t._v("&&")]),t._v("|\t逻辑与|")]),t._v(" "),_("h2",{attrs:{id:"按位和位移运算符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#按位和位移运算符"}},[t._v("#")]),t._v(" 按位和位移运算符")]),t._v(" "),_("p",[t._v("|---|---|\n|运算符 | 意义|\n|"),_("code",[t._v("&")]),t._v("\t|与|\n|"),_("code",[t._v("|")]),t._v("\t|或|\n|"),_("code",[t._v("^")]),t._v("\t|异或|\n|"),_("code",[t._v("~expr")]),t._v("|\t按位补码（0成为1；1变成0）|\n|"),_("code",[t._v("<<")]),t._v("\t|左移位|\n|"),_("code",[t._v(">>")]),t._v("\t|右移位|")]),t._v(" "),_("h2",{attrs:{id:"其它运算符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其它运算符"}},[t._v("#")]),t._v(" 其它运算符")]),t._v(" "),_("p",[t._v("|---|---|---|\n|运算符\t|名称\t|意义|\n|"),_("code",[t._v("()")]),t._v("|\t函数应用|\t表示一个函数调用|\n|"),_("code",[t._v("[]")]),t._v("\t|访问列表|\t在列表中索引指定值|\n|"),_("code",[t._v("expr1 ? expr2 : expr3")]),t._v("|\t条件式|\t如果expr1为真，执行expr2，否则执行expr3|\n|"),_("code",[t._v("expr1 ?? expr2")]),t._v("|\t条件式|\t如果expr1为真，执行expr2|\n|"),_("code",[t._v(".")]),t._v("\t|成员访问\t|选择对象的成员，例如foo.bar|\n|"),_("code",[t._v("?.")]),t._v("|\t条件成员访问|\t跟.差不多,但是最左边的操作数可以为空；例子:foo?.bar从表达式foo中选择属性bar，除非foo为空(在这种情况下，foo?.bar值为空)|\n|"),_("code",[t._v("..")]),t._v("|\t级联\t|对对象的成员执行多个操作|")]),t._v(" "),_("h1",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://blog.csdn.net/hekaiyou/article/details/51445608",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dart入门—函数与运算符"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://blog.csdn.net/hekaiyou/article/details/46652297",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dart基础-运算符"),_("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=a.exports}}]);